"""
Django settings for Wakaba64 project.

Generated by 'django-admin startproject' using Django 4.2.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path
import os

def env_var(key, default=None):
    """Retrieves env vars and makes Python boolean replacements"""
    val = os.environ.get(key, default)
    if val == 'True':
        val = True
    elif val == 'False':
        val = False
    return val

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

SECRET_KEY = env_var('SECRET_KEY')
DEBUG = env_var('DEBUG', False)

ALLOWED_HOSTS = env_var('ALLOWED_HOSTS').split()
CSRF_TRUSTED_ORIGINS = env_var('CSRF_TRUSTED_ORIGINS').split()


# Application definition

INSTALLED_APPS = [
    'mastoapi',
    'accounts',
    'board',
    'godmode',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'Wakaba64.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'Wakaba64.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': env_var("DATABASE_ENGINE", "django.db.backends.sqlite3"),
        'NAME': env_var("DATABASE_NAME", BASE_DIR / "db.sqlite3"),
        'HOST': env_var("DATABASE_HOST", ""),
        'USER': env_var("DATABASE_USER", ""),
        'PASSWORD': env_var("DATABASE_PASSWORD", ""),

    }
}


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'UTC'
USE_I18N = True
USE_TZ = True
STATIC_URL = 'static/'
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
STATIC_ROOT = BASE_DIR / "static"



# wakaba settings
WAKABA_VERSION = env_var("WAKABA_VERSION", "v1.0.0-alpha")

# UI customization
SITE_NAME = env_var("SITE_NAME", "web3chan")
SITE_TITLE = env_var("SITE_TITLE", "NextGen MultimediaBoard")
SITE_ABOUT = env_var("SITE_ABOUT", "it's like 4chan, but ✨decentralized✨")
ABOUT_TEMPLATE = env_var("ABOUT_TEMPLATE", "board/example_pages/about.html")
SITE_RULES = env_var("SITE_RULES", "do what you want 'cause a pirate is free!")
RULES_TEMPLATE = env_var("RULES_TEMPLATE", "board/example_pages/rules.html")
NAVBAR_TEMPLATE = env_var("NAVBAR_TEMPLATE", "board/navbar.html")
INDEX_TEMPLATE = env_var("INDEX_TEMPLATE", "board/index.html")
CSS_THEME = env_var("CSS_THEME", "board/futaba.css")
FAVICON = env_var("FAVICON", "board/favicon.ico")


# Default MastoApi client name. Used when a user is not logged in
ANONYMOUS_MASTOAPI = env_var("ANONYMOUS_MASTOAPI", "anonymous")

# Escape HTML in status contents and account notes
ESCAPE_CONTENT = env_var("ESCAPE_CONTENT", "False")
# Always use remote media URLs (not MediaProxy)
REMOTE_MEDIA = env_var("REMOTE_MEDIA", "True")
# Render media as html tags or show a text link
DISPLAY_MEDIA = env_var("DISPLAY_MEDIA", "False")
# Display sensitive media?
DISPLAY_SENSITIVE_MEDIA = env_var("DISPLAY_SENSITIVE_MEDIA", "False")

# Cache timeouts
CACHE_STATUS = int(env_var("CACHE_STATUS", "60"))
CACHE_STATUS_CONTEXT = int(env_var("CACHE_STATUS_CONTEXT", "30"))
CACHE_ACCOUNT = int(env_var("CACHE_ACCOUNT", "600"))
CACHE_TIMELINE = int(env_var("CACHE_TIMELINE", "60"))
# API results pagination
ACCOUNT_PAGINATION = int(env_var("ACCOUNT_PAGINATION", "40"))
TIMELINE_PAGINATION = int(env_var("TIMELINE_PAGINATION", "20"))

# Limit posts by a single django user
LIMIT_POSTS_PER_DAY = int(env_var("LIMIT_POSTS_PER_DAY", "720"))

DJANGO_ADMIN_URL = env_var("DJANGO_ADMIN_URL", "admin/")
STATUS_VISIBILITY = "public"
MASTODON_VERSION = "2.7.2"
LOGIN_URL = "auth"

# Media URL rewrite rules, separated by ;. Example:
# "https://mastodon.social,https://example.com;https://mastodon.ml,https://example.org"
MEDIA_URL_REWRITE = env_var("MEDIA_URL_REWRITE", "")
MEDIA_URL_REWRITE_RULES = {}
if MEDIA_URL_REWRITE:
    for rule in MEDIA_URL_REWRITE.split(";"):
        target, value = rule.split(",")
        MEDIA_URL_REWRITE_RULES[target] = value
